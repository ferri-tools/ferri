,T72,Unify Execution Terminology,T72.1,"In `ferri-core/src/flow.rs`, rename the `Pipeline` struct to `Flow`.",Pending
,T72,Unify Execution Terminology,T72.2,"In `ferri-core/src/flow.rs`, rename the `Step` struct to `Job`.",Pending
,T72,Unify Execution Terminology,T72.3,"In `ferri-core/src/flow.rs`, rename the `steps` field in the `Flow` struct to `jobs`.",Pending
,T72,Unify Execution Terminology,T72.4,"Update `serde` field attributes to expect `jobs` in the YAML file instead of `steps`.",Pending
,T72,Unify Execution Terminology,T72.5,"Refactor all function names and variables in the `flow` module to use ""job"" instead of ""step"" (e.g., `run_pipeline` -> `run_flow`).",Pending
,T72,Unify Execution Terminology,T72.6,"Update `pm/gemini_code_review.yml` and any other flow files to use the new `jobs` syntax.",Pending
,T72,Unify Execution Terminology,T72.7,"Update `qa/gemini_code_review_walkthrough.md` to reflect the new `jobs` syntax.",Pending
,T72,Unify Execution Terminology,T72.8,"Globally search the codebase for any remaining user-facing instances of ""step"" and replace with ""job"" for consistency.",Pending
,T73,Implement Flow Dependencies,T73.1,"In `ferri-core/src/flow.rs`, add an optional `dependencies: Vec<String>` field to the `Job` struct.",Pending
,T73,Implement Flow Dependencies,T73.2,"In the `run_flow` function, implement a dependency resolution algorithm (e.g., topological sort) to determine the correct execution order.",Pending
,T73,Implement Flow Dependencies,T73.3,"The dependency resolution logic must be able to handle parallel execution for jobs that have no dependencies on each other.",Pending
,T73,Implement Flow Dependencies,T73.4,"In the `run_flow` function, add robust error handling for missing or circular dependencies.",Pending
,T73,Implement Flow Dependencies,T73.5,"Create a new `pm/dependency_test_flow.yml` file with a non-linear job structure to serve as a test case.",Pending
,T73,Implement Flow Dependencies,T73.6,"In `ferri-cli/tests/flow.rs`, add a new integration test that runs the `dependency_test_flow.yml` and verifies jobs run in the correct order.",Pending
,T74,Comprehensive Documentation Overhaul,T74.1,"Audit every command and flag in `README.md` against the current implementation in `ferri-cli/src/main.rs`.",Pending
,T74,Comprehensive Documentation Overhaul,T74.2,"Rewrite the `ferri flow` section in `README.md` to accurately describe the new `jobs` and `dependencies` syntax.",Pending
,T74,Comprehensive Documentation Overhaul,T74.3,"Add a clear, complex example of a flow with dependencies in `README.md`.",Pending
,T74,Comprehensive Documentation Overhaul,T74.4,"Create a new `CONTRIBUTING.md` file outlining the project structure, development workflow, and coding conventions.",Pending
,T74,Comprehensive Documentation Overhaul,T74.5,"Review and update `COMMAND_MODIFIERS.md` to ensure all listed modifiers are implemented and correctly described.",Pending
,T74,Comprehensive Documentation Overhaul,T74.6,"Add a ""Project Status"" section to the `README.md` that explicitly states the tool is in active development and documentation may lag.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.1,"In `ferri-cli/src/main.rs`, remove the explicit block preventing `PreparedCommand::Remote` from being used by the `run` command.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.2,"In `ferri-core/src/jobs.rs`, modify `submit_job` to handle a `PreparedCommand::Remote` variant.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.3,"For remote jobs, `submit_job` should spawn a new async task (e.g., using `tokio::spawn`) to execute the HTTP request.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.4,"The async task must write the API response to the job's `stdout.log` and any errors to `stderr.log`.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.5,"The async task must write the final exit code (0 for success, 1 for failure) to `exit_code.log` upon completion.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.6,"Update the `Job` struct to store the task handle or another identifier for the async operation.",Pending
,T75,Enable Remote Model Execution for `ferri run`,T75.7,"Add an integration test in `ferri-cli` to verify that `ferri run --model <remote_model>` works correctly.",Pending
,T76,Refactor Job Process Management,T76.1,"In `ferri-core/src/jobs.rs`, refactor `submit_job` to remove the dependency on the `sh -c` wrapper script.",Pending
,T76,Refactor Job Process Management,T76.2,"Use Rust's `std::process::Stdio::from(File::create(...))` to directly pipe the child process's stdout and stderr to the respective log files.",Pending
,T76,Refactor Job Process Management,T76.3,"Modify the process spawning logic to capture the exit code directly using `child.wait()` in a separate, monitored thread.",Pending
,T76,Refactor Job Process Management,T76.4,"Ensure the `exit_code.log` is written atomically after the process completes to eliminate the race condition with `ferri ps`.",Pending
,T76,Refactor Job Process Management,T76.5,"Verify that the new implementation is portable and does not rely on Unix-specific shell features.",Pending
,T76,Refactor Job Process Management,T76.6,"Update the `kill_job` function to ensure it can still terminate the correctly spawned process group.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.1,"In `ferri-cli/src/main.rs`, add a `--stderr` flag to the `yank` command.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.2,"In `ferri-core/src/jobs.rs`, modify `get_job_output` to accept a boolean flag indicating whether to retrieve stderr.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.3,"If the `--stderr` flag is present, the function should return the contents of `stderr.log`.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.4,"If the flag is absent, the function should *only* return the contents of `stdout.log`, regardless of whether `stderr.log` has content.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.5,"Update the documentation for `ferri yank` in `README.md` to explain the new default behavior and the `--stderr` flag.",Pending
,T77,Clarify and Enhance `ferri yank` Behavior,T77.6,"Add an integration test to `ferri-cli` to verify the behavior of `yank` both with and without the `--stderr` flag.",Pending
